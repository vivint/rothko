// Copyright (C) 2018. See AUTHORS.

syntax = "proto3";

package sm.rothko.data;
option go_package = "data";

import "github.com/gogo/protobuf/gogoproto/gogo.proto";

option (gogoproto.marshaler_all) = true;
option (gogoproto.unmarshaler_all) = true;
option (gogoproto.sizer_all) = true;
option (gogoproto.goproto_getters_all) = false;

// Kind is the kind of the distribution.
enum Kind {
	Unknown = 0; // if unspecified, it's unknown.
	TDigest = 1; // github.com/zeebo/tdigest
}

// Record is an observed distribution over some time period with some
// additional data about observed minimums and maximums.
message Record {
	// start and end time in seconds since unix epoch utc
	int64 start_time = 1;
	int64 end_time = 2;

	// the number of observations in the distribution
	int64 observations = 3;

	// a serialized distribution. the kind tells us which type of distribution
	// it is.
	bytes distribution = 4;
	Kind kind = 5;

	// minimum and maximum values observed
	double min = 6;
	double max = 7;
	bytes min_id = 8;
	bytes max_id = 9;

	// how many records have been merged into this.
	int64 merged = 10;
}
