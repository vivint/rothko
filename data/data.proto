// Copyright (C) 2017. See AUTHORS.

syntax = "proto3";

package sm.rothko.data;
option go_package = "data";

import "github.com/gogo/protobuf/gogoproto/gogo.proto";

option (gogoproto.marshaler_all) = true;
option (gogoproto.unmarshaler_all) = true;
option (gogoproto.sizer_all) = true;
option (gogoproto.goproto_getters_all) = false;

enum DistributionKind {
	Random = 0; // gopkg.in/spacemonkeygo/random.v1
	TDigest = 1; // github.com/zeebo/go-tdigest (fenwick branch for speeds)
}

// Record is an observed distribution over some time period with some
// additional data about observed minimums and maximums.
message Record {
	// these fields used to store outlier information, but it's mostly as good
	// and far cheaper to just store the maximum and minimum.
	reserved 6, 7, 8;

	// start and end time in seconds since unix epoch utc
	int64 start_time = 1;
	int64 end_time = 2;

	// the number of observations in the distribution
	int64 observations = 11;

	// a serialized distribution. the kind tells us which type of distribution
	// it is.
	bytes distribution = 3;
	DistributionKind distribution_kind = 10;

	// minimum and maximum values observed
	double min = 4;
	bytes min_id = 12;
	double max = 5;
	bytes max_id = 13;

	// how many records have been merged into this.
	int64 merged = 9;
}
